// <auto-generated />
//
// https://app.quicktype.io/
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using restapi_retool;
//
//    var dolgozo = Dolgozo.FromJson(jsonString);

namespace restapi_retool
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using System.Web.Script.Serialization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Dolgozo
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("payment")]
        public long Payment { get; set; }

        [JsonProperty("birthdate")]
        public string BirthdateString
        {
            get { return birthdate.ToString("yyyy-MM-dd"); }
            set { birthdate = DateTime.Parse(value); }
        }

        private DateTime birthdate;

        public DateTime Birthdate
        {
            get { return birthdate; }

            set { birthdate = value; }
        }
  
        override public string ToString()
        {
            return Name;
        }
    }

    public partial class Dolgozo
    {
        public static Dolgozo[] FromJson(string json) => JsonConvert.DeserializeObject<Dolgozo[]>(json, restapi_retool.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Dolgozo[] self) => JsonConvert.SerializeObject(self, restapi_retool.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
